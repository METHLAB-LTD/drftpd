# This file controls commands accessible via irc connections
# All commands generally have the following properties, some
# commands may have additional configuration values also:
# plugin - The plugin that provides this command
# class - The java class containing this command
# method - The java method called when executing this command
# perms - The users allowed to use this command
# help - A simple description of the commands function
# help.specific - More detailed information about the commands usage

abort {
plugin org.drftpd.master.commands.misc
class Misc
method doABOR
perms *
help Abort all commands being run by the user issuing the abort.
help.specific Abort all commands being run by the user issuing the abort.
help.specific ${command}
input all
output source
}

addgroup {
plugin org.drftpd.master.commands.usermanagement
class GroupManagementHandler
method doSITE_ADDGROUP
perms =siteop
help Add a new group.
help.specific Add a new group.
help.specific ${command} <group>
input all
output source
}

addip {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_ADDIP
perms =gadmin =siteop
help Add a new mask to a user.
help.specific Add a new mask to a user.
help.specific ${command} <username> <ident@ip>
input all
output source
}

addnote {
plugin org.drftpd.master.commands.usermanagement.notes
class Notes
method doSITE_ADDNOTE
perms =siteop
help Add's Note for user.
help.specific Add's Note for user.
help.specific ${command} <username> <note>
input all
output source
}

addslave {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doSITE_ADDSLAVE
perms =siteop
help Add a slave to the site.
help.specific Add a slave to the site.
help.specific ${command} <SLAVENAME>
help.specific Add the specified slave to the site.
help.specific Note: Be sure to use SLAVE <SLAVENAME> ADDMASK <ident@host>
help.specific to allow the slave to connect.
input all
output source
}

adduser {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_ADDUSER
perms =gadmin =siteop
help Add a new user.
help.specific Add a new user.
help.specific ${command} <user> <password> [<ident@ip#1> ...]
input all
output source
}

affils {
plugin org.drftpd.master.commands.textoutput
class Textoutput
method doTEXT_OUTPUT
perms *
help Displays the site affils.
help.specific Displays the site affils.
help.specific ${command}
file affils.txt
input public
output source
}

aldn {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_ALDN
perms *
help Lists the top downloaders of all time.
help.specific Lists the top downloaders of all time.
help.specific ${command}
input all
output source
}

alup {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_ALUP
perms *
help Lists the top uploaders of all time.
help.specific Lists the top uploaders of all time.
help.specific ${command}
input all
output source
}

approve {
plugin org.drftpd.master.commands.approve
class ApproveCommands
method doSITE_APPROVE
perms =siteop
help Approve release even though rules say it should get nuked.
help.specific Approve release even though rules say it should get nuked.
help.specific ${command} [path]
input all
output source
}

ban {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_BAN
perms =ban =siteop
help Ban a user from logging onto the site for a specified amount of time.
help.specific Ban a user from logging onto the site for a specified amount of time.
help.specific ${command} <user> <minutes> [reason]
input all
output source
}

banall {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_BANALL
perms =ban =siteop
help Ban all users from logging onto the site for a specified amount of time.
help.specific Ban all users from logging onto the site for a specified amount of time.
help.specific ${command} <minutes> [reason]
input all
output source
}

bans {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_BANS
perms =ban =siteop
help List the current users banned on the site.
help.specific List the current users banned on the site.
help.specific ${command}
input all
output source
}

bnc {
plugin org.drftpd.master.commands.textoutput
class Textoutput
method doTEXT_OUTPUT
perms *
help Displays the site bnc details.
help.specific Displays the site bnc details.
help.specific ${command}
file bnc.txt
input public
output source
}

bw {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doBW
perms *
help Show total bandwidth use.
help.specific Show total bandwidth use.
help.specific ${command}
input all
output source
}

# Backwards compatibility
change {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_CHANGEUSER
perms =gadmin =siteop
help Change parameters for a user.
help.specific Change parameters for a user.
help.specific ${command} <username> <field> <value>
help.specific Valid fields: group, created, ratio, idle_time, credits, tagline
help.specific num_logins # [opt perIP], comment, wkly_allotment, max_sim #dn #up
input all
output source
}

changegroup {
plugin org.drftpd.master.commands.usermanagement
class GroupManagementHandler
method doSITE_CHANGEGROUP
perms =siteop
help Change parameters for a group.
help.specific Change parameters for a group.
help.specific ${command} <groupname> <field> <value>
help.specific Valid fields: created, slots, leechslots
input all
output source
}

changegroupadmin {
plugin org.drftpd.master.commands.usermanagement
class GroupManagementHandler
method doSITE_CHANGEGROUPADMIN
perms =siteop
help Add/Remove users as group admin from a group.
help.specific Add/Remove users as group admin from a group.
help.specific ${command} <group> <user> [<user> ...]
input all
output source
}

changeuser {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_CHANGEUSER
perms =gadmin =siteop
help Change parameters for a user.
help.specific Change parameters for a user.
help.specific ${command} <username> <field> <value>
help.specific Valid fields: group, created, ratio, idle_time, credits, tagline
help.specific num_logins # [opt perIP], comment, wkly_allotment, max_sim #dn #up
input all
output source
}

chgrp {
plugin org.drftpd.master.commands.usermanagement
class GroupManagementHandler
method doSITE_CHGRP
perms =siteop
help Change secondary groups for a user.
help.specific Change secondary groups for a user.
help.specific ${command} <user> <group> [<group> ...]
input all
output source
}

chown {
plugin org.drftpd.master.commands.dir
class Dir
method doSITE_CHOWN
perms =siteop
help Changes ownership of a file/directory.
help.specific Changes ownership of a file/directory.
help.specific ${command} [-r] <user>[:<group>] <file>
input all
output source
}

chpass {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_CHPASS
perms =gadmin =siteop
help Change password for a user.
help.specific Change password for a user.
help.specific ${command} <user> <password>
input all
output source
}

credits {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doCredits
perms *
help Show available credits.
help.specific Show available credits.
help.specific ${command}
input all
output source
}

cut {
plugin org.drftpd.trial.master
class TrialManagerCommands
method doCUT
perms *
help Lists all cut users in trial period.
help.specific Lists all cut users in trial period.
help.specific ${command} <num>
input all
output source
}

daydn {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_DAYDN
perms *
help Lists the top downloaders today.
help.specific Lists the top downloaders today.
help.specific ${command}
input all
output source
}

dayup {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_DAYUP
perms *
help Lists the top uploaders today.
help.specific Lists the top uploaders today.
help.specific ${command}
input all
output source
}

debug {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_DEBUG
perms *
help Allows you to see stacktraces on command errors.
help.specific Allows you to see stacktraces on command errors.
help.specific ${command}
input all
output source
}

delip {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_DELIP
perms =gadmin =siteop
help Remove a mask from a user.
help.specific Remove a mask from a user.
help.specific ${command} <user> <ident@ip> ...
input all
output source
}

delgroup {
plugin org.drftpd.master.commands.usermanagement
class GroupManagementHandler
method doSITE_DELGROUP
perms =gadmin =siteop
help Delete a group.
help.specific Delete a group.
help.specific ${command} <group>
input all
output source
}

delnote {
plugin org.drftpd.master.commands.usermanagement.notes
class Notes
method doSITE_DELNOTE
perms =siteop
help Removes Note For User.
help.specific Removes Note For User.
help.specific ${command} <username> <noteID>
input all
output source
}

delpurge {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_DELPURGE
perms =gadmin =siteop
help Permanently remove a user from the site.
help.specific Permanently remove a user from the site.
help.specific ${command} <username>
input all
output source
}

delslave {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doSITE_DELSLAVE
perms =siteop
help Remove a slave from the site.
help.specific Remove a slave from the site.
help.specific ${command} <SLAVENAME>
help.specific Remove the specified slave from the site.
input all
output source
}

deluser {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_DELUSER
perms =gadmin =siteop
help Delete a user.
help.specific Delete a user.
help.specific ${command} <user> [reason]
input all
output source
}

df {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doDiskfree
perms *
help Displays current free space.
help.specific Displays current free space.
help.specific ${command}
input all
output source
}

fairness {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_FAIRNESS
perms =siteop
help Show ratio for all users or a specific user/group if given as input.
help.specific Show ratio for all users or a specific user/group if given as input.
help.specific ${command} [user / =group]
input all
output source
}

fixlinks {
plugin org.drftpd.links.master
class LinkManagerCommands
method doSITE_FIXLINKS
perms =siteop
help Fixes all links from LinkManager.
help.specific Fixes all links from LinkManager.
help.specific ${command}
input all
output source
}

fixsize {
plugin org.drftpd.master.commands.dir
class Dir
method doSITE_FIXSIZE
perms =siteop
help Recursively walks through and validates the size information of the current working directory.
help.specific Recursively walks through and validates the size information of the current working directory.
help.specific ${command}
input all
output source
}

fixslavecount {
plugin org.drftpd.master.commands.dir
class Dir
method doSITE_FIXSLAVECOUNT
perms =siteop
help Recursively walks through and validates the slave reference counts held against the current working directory.
help.specific Recursively walks through and validates the slave reference counts held against the current working directory.
help.specific ${command}
help.specific This command should only be run when the site has a static VFS,
help.specific this means no file uploads, no slaves remerging and no active
help.specific archiving/jobs defined. If changes happen in the VFS whilst this
help.specific command is running the resulting counts set will be incorrect.
input all
output source
}

gadduser {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_GADDUSER
perms =siteop
help Add a new user to the specified group.
help.specific Add a new user to the specified group.
help.specific ${command} <group> <user> <password> [<ident@ip#1 ..]
input all
output source
}

galdn {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_GALDN
perms *
help Lists the top downloading group of all time.
help.specific Lists the top downloading group of all time.
help.specific ${command}
input all
output source
}

galup {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_GALUP
perms *
help Lists the top uploading group of all time.
help.specific Lists the top uploading group of all time.
help.specific ${command}
input all
output source
}

gdaydn {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_GDAYDN
perms *
help Lists the top downloading group for the day.
help.specific Lists the top downloading group for the day.
help.specific ${command}
input all
output source
}

gdayup {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_GDAYUP
perms *
help Lists the top uploading group for the day.
help.specific Lists the top uploading group for the day.
help.specific ${command}
input all
output source
}

ginfo {
plugin org.drftpd.master.commands.usermanagement
class GroupManagementHandler
method doSITE_GINFO
perms =gadmin =siteop
help Show information on a group.
help.specific Show information on a group.
help.specific ${command} <group>
input all
output source
}

give {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_GIVE
perms =siteop
help Give a user credits.
help.specific Give a user credits.
help.specific ${command} <user> <bytes>
input all
output source
}

gmonthdn {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_GMONTHDN
perms *
help Lists the top downloading group for the month.
help.specific Lists the top downloading group for the month.
help.specific ${command}
input all
output source
}

gmonthup {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_GMONTHUP
perms *
help Lists the top uploading group of all time.
help.specific Lists the top uploading group of all time.
help.specific ${command}
input all
output source
}

gpassed {
plugin org.drftpd.trial.master
class TrialManagerCommands
method doPASSED
perms =siteop
help Lists if group has passed trial.
help.specific Lists if group has passed trial.
help.specific ${command} <Group>
input public
output source
}

groups {
plugin org.drftpd.master.commands.usermanagement
class GroupManagementHandler
method doSITE_GROUPS
perms =siteop
help Lists the groups on the site.
help.specific Lists the groups on the site.
help.specific ${command}
input all
output source
}

grpren {
plugin org.drftpd.master.commands.usermanagement
class GroupManagementHandler
method doSITE_GRPREN
perms =siteop
help Rename a group.
help.specific Rename a group.
help.specific ${command} <oldgroup> <newgroup>
input all
output source
}

gtop {
plugin org.drftpd.trial.master
class TrialManagerCommands
method doTOP
perms *
help Lists all users in trial period.
help.specific Lists all users in trial period.
help.specific ${command} <num>
input all
output source
}

gwkdn {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_GWKDN
perms *
help Lists the top downloading group for the week.
help.specific Lists the top downloading group for the week.
help.specific ${command}
input all
output source
}

gwkup {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_GWKUP
perms *
help Lists the top uploading group for the week.
help.specific Lists the top uploading group for the week.
help.specific ${command}
input all
output source
}

help {
plugin org.drftpd.master.commands.misc
class Misc
method doSITE_HELP
perms *
help Duh! it does this dummy!
help.specific Duh! it does this dummy!
help.specific ${command} <command> will display specific information on that command.
input all
output source
}

idlers {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doIdlers
perms *
help Show who's idling.
help.specific Show who's idling.
help.specific ${command}
input all
output source
}

indexstatus {
plugin org.drftpd.master.commands.indexmanager
class IndexManager
method doIndexStatus
perms =siteop
help Index status.
help.specific Index status.
help.specific ${command}
input all
output source
}

kick {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_KICK
perms =siteop
help Kick a users current connections to the site.
help.specific Kick a users current connections to the site.
help.specific ${command} <user> [message]
input all
output source
}

kickall {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_KICKALL
perms =siteop
help Kick all users current connections to the site.
help.specific Kick all users current connections to the site.
help.specific ${command} [message]
input all
output source
}

kickslave {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doSITE_KICKSLAVE
perms =siteop
help Kick a slave offline.
help.specific Kick a slave offline.
help.specific ${command} <SLAVENAME>
input all
output source
}

kill {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_KILL
perms =siteop
help Kill's a specific connection from the FTP by thread ID.
help.specific Kill's a specific connection from the FTP by thread ID.
help.specific ${command} <threadID> [message]
input all
output source
}

leechers {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doLeechers
perms *
help Show who's downloading.
help.specific Show who's downloading.
help.specific ${command}
input all
output source
}

link {
plugin org.drftpd.master.commands.dir
class Dir
method doSITE_LINK
perms =siteop
help Creates a symbolic link.
help.specific Creates a symbolic link.
help.specific ${command} <target> <linkname>
input all
output source
}

list {
plugin org.drftpd.master.commands.sitemanagement
class SiteManagementHandler
method doSITE_LIST
perms *
help This will raw list files in the current directory.
help.specific This will raw list files in the current directory.
help.specific ${command}
input all
output source
}

master-uptime {
plugin org.drftpd.master.commands.serverstatus
class ServerStatus
method doMasterUptime
perms =siteop
help Will show current master uptime.
help.specific Will show current master uptime.
help.specific ${command}
input all
output source
}

monthdn {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_MONTHDN
perms *
help Lists the top downloaders this month.
help.specific Lists the top downloaders this month.
help.specific ${command}
input all
output source
}

monthup {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_MONTHUP
perms *
help Lists the top uploaders this month.
help.specific Lists the top uploaders this month.
help.specific ${command}
input all
output source
}

new {
plugin org.drftpd.master.commands.newhandler
class New
method doNEW
perms *
help Will list newly uploaded directories.
help.specific Will list newly uploaded directories.
help.specific ${command} - List the newest dirs in all sections.
help.specific ${command} <number> - List the <number> newest dirs in all sections.
help.specific ${command} <section> - List the newest dirs in <section>.
help.specific ${command} <section> <number> - List the <number> newest dirs in <section>.
# Specify the default number of dirs to show.
# Default: [5]
default 5
# Specify the maximum number of dirs to show (overrides user input).
# Default: [10]
max 10
# Specify the sections to exclude from output (space separated).
filtered_sections REQUESTS
input all
output source
}

nuke {
plugin org.drftpd.master.commands.nuke
class Nuke
method doSITE_NUKE
perms =nuke =siteop
search true
help Nuke a directory.
help.specific Nuke a directory.
help.specific ${command} <directory> <multiplier> <message>
input all
output source
}

nukes {
plugin org.drftpd.master.commands.nuke
class Nuke
method doSITE_NUKES
perms *
help List all nuked directories.
help.specific List all nuked directories.
help.specific ${command} [section]
input all
output source
}

nukesclean {
plugin org.drftpd.master.commands.nuke
class Nuke
method doSITE_NUKESCLEAN
perms =nuke =siteop
help Clear nukelog of all invalid nukes.
help.specific Clear nukelog of all invalid nukes.
help.specific ${command}
input all
output source
}

passed {
plugin org.drftpd.trial.master
class TrialManagerCommands
method doPASSED
perms *
help Lists if user has passed trial.
help.specific Lists if user has passed trial.
help.specific ${command} <user>
input all
output source
}

passwd {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_PASSWD
perms *
help Change your password.
help.specific Change your password.
help.specific ${command} <password>
input all
output source
}

pre {
plugin org.drftpd.master.commands.pre
class Pre
method doSITE_PRE
perms *
help Moves dir to specified section.
help.specific Moves dir to specified section.
help.specific ${command} <dir> <section>
input all
output source
}

purge {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_PURGE
perms =gadmin =siteop
help Permanently remove a user from the site.
help.specific Permanently remove a user from the site.
help.specific ${command} <user>
input all
output source
}

readd {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_READD
perms =gadmin =siteop
help Readd a deleted user.
help.specific Readd a deleted user.
help.specific ${command} <user>
input all
output source
}

rebuildindex {
plugin org.drftpd.master.commands.indexmanager
class IndexManager
method doRebuildIndex
perms =siteop
help Rebuild index.
help.specific Rebuild index.
help.specific ${command}
input all
output source
}

refreshindex {
plugin org.drftpd.master.commands.indexmanager
class IndexManager
method doRefreshIndex
perms =siteop
help Requests a recursive refresh of data held for the current directory in the index.
help.specific Requests a recursive refresh of data held for the current directory in the index.
help.specific ${command} [-q]
help.specific The -q option suppresses details of the progress of the refresh.
input all
output source
}

reload {
plugin org.drftpd.master.commands.sitemanagement
class SiteManagementHandler
method doSITE_RELOAD
perms =siteop
help Reload the config files.
help.specific Reload the config files.
help.specific ${command}
input all
output source
}

remapprove {
plugin org.drftpd.master.commands.approve
class ApproveCommands
method doSITE_REMAPPROVE
perms =siteop
help Removes Approval of release.
help.specific Removes Approval of release.
help.specific ${command} [path]
input all
output source
}

remerge {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doSITE_REMERGE
perms =siteop
help Rebuilds the file database of the specified slave.
help.specific Rebuilds the file database of the specified slave.
help.specific ${command} <slave>
input all
output source
}

remergequeue {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doRemergequeue
perms =siteop
help Displays remergequeue status.
help.specific Displays remergequeue status.
help.specific ${command}
input public
output source
}

removeexpire {
plugin org.drftpd.master.commands.usermanagement.expireduser
class ExpiredUser
method doSITE_REMOVEEXPIRE
perms =siteop
help Removes expiry date for user.
help.specific Removes expiry date for user.
help.specific ${command} <user>
input all
output source
}

renuser {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_RENUSER
perms =siteop
help Rename a user.
help.specific Rename a user.
help.specific ${command} <old> <new>
input all
output source
}

reqdel {
plugin org.drftpd.request.master
class Request
method doSITE_REQDELETE
perms =request =siteop
help Deletes a request.
help.specific Deletes a request.
help.specific ${command} <nameofrequest>
input all
output source
# You can only delete your own without deleteOthers.
request.deleteOthers =siteop
}

reqfilled {
plugin org.drftpd.request.master
class Request
method doSITE_REQFILLED
perms *
help Fill a request.
help.specific Fill a request.
help.specific ${command} <nameofrequest>
input all
output source
}

request {
plugin org.drftpd.request.master
class Request
method doSITE_REQUEST
perms =request =siteop
help Add a request.
help.specific Add a request.
help.specific ${command} <nameofrequest>
input all
output source
# You can only delete your own without deleteOthers.
request.deleteOthers =siteop
}

requests {
plugin org.drftpd.request.master
class Request
method doSITE_REQUESTS
perms *
help List current requests.
help.specific List current requests.
help.specific ${command}
input all
output source
}

rules {
plugin org.drftpd.master.commands.textoutput
class Textoutput
method doTEXT_OUTPUT
perms *
help Displays the site rules.
help.specific Displays the site rules.
help.specific ${command}
file rules.txt
input all
output source
}

sections {
plugin org.drftpd.master.commands.sections
class Sections
method doSITE_SECTIONS
perms *
help List the currently defined sections on the site.
help.specific List the currently defined sections on the site.
help.specific ${command}
input all
output source
}

seen {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_SEEN
perms *
help Show when a user last connected.
help.specific Show when a user last connected.
help.specific ${command} <user>
input all
output source
}

setexpire {
plugin org.drftpd.master.commands.usermanagement.expireduser
class ExpiredUser
method doSITE_SETEXPIRE
perms =siteop
help Sets expiry date for user.
help.specific Sets expiry date for user.
help.specific ${command} <user> <yyyy-mm-dd>
input all
output source
}

shutdown {
plugin org.drftpd.master.commands.sitemanagement
class SiteManagementHandler
method doSITE_SHUTDOWN
perms =siteop
help Shutdown the ftp server.
help.specific Shutdown the ftp server.
help.specific ${command}
input all
output source
}

slave {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doSlave
perms =siteop
help Display a slaves status.
help.specific Display a slaves status.
help.specific ${command} <slave>
input all
output source
}

slave-uptime {
plugin org.drftpd.master.commands.serverstatus
class ServerStatus
method doSlaveUptime
perms =siteop
help Will show current slave uptime.
help.specific Will show current slave uptime.
help.specific ${command} <slave>
input all
output source
}

slaves {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doSITE_SLAVES
perms =siteop
help List the slave added to the site and the status of each.
help.specific List the slave added to the site and the status of each.
help.specific ${command}
input all
output source
}

slave-select {
plugin org.drftpd.master.commands.slavemanagement
class SlaveManagement
method doSITE_SLAVESELECT
perms =siteop
help Gives the value of each slave for your current SlaveSelection config.
help.specific Gives the value of each slave for your current SlaveSelection config.
help.specific ${command} <type> </fullpath>
help.specific <type> is one of up, down, jobdown, jobup.
help.specific </fullpath> needs to start with "/" should not exist.
input all
output source
}

slaves-uptime {
plugin org.drftpd.master.commands.serverstatus
class ServerStatus
method doSlavesUptime
perms =siteop
help Will show current slaves uptime.
help.specific Will show current slaves uptime.
help.specific ${command}
input all
output source
}

speed {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSpeed
perms *
help Show the state of the specified users connections.
help.specific Show the state of the specified users connections.
help.specific ${command} <user>
input all
output source
}

stat {
plugin org.drftpd.master.commands.misc
class Misc
method doSITE_STAT
perms *
help Show simple user stats.
help.specific Show simple user stats.
help.specific ${command}
input all
output source
}

stats {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_STATS
perms *
help Show user stats.
help.specific Show user stats.
help.specific ${command} <user>
input all
output source
}

status {
plugin org.drftpd.master.commands.serverstatus
class ServerStatus
method doStatus
perms =siteop
help Will show current status of the daemon.
help.specific Will show current status of the daemon.
help.specific ${command} Usage:
help.specific ${command} <os, vm, memory, threads, gc, all>
help.specific ${command} OS - Will show Operational System Info.
help.specific ${command} VM - Will show VM Info.
help.specific ${command} MEMORY - Will show Memory Info.
help.specific ${command} THREADS - Will show Threads Info.
help.specific ${command} GC - Will show Garbage Collector Info.
help.specific ${command} CLASSES - Will show Classes Info.
help.specific ${command} ALL - Shortcut to display ALL Info.
input all
output source
}

swap {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_SWAP
perms =siteop
help Swap credits between users.
help.specific Swap credits between users.
help.specific ${command} <srcuser> <destuser> <bytes>
input all
output source
}

swho {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_SWHO
perms =siteop
help Show who's online.
help.specific Show who's online.
help.specific ${command}
input all
output source
}

tagline {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_TAGLINE
perms *
help Change your tagline.
help.specific Change your tagline.
help.specific ${command} <tagline>
input all
output source
}

take {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_TAKE
perms =siteop
help Remove credits from a user.
help.specific Remove credits from a user.
help.specific ${command} <user> <bytes>
input all
output source
}

time {
plugin org.drftpd.master.commands.misc
class Misc
method doSITE_TIME
perms *
help Show current server time.
help.specific Show current server time.
help.specific ${command}
input all
output source
}

top {
plugin org.drftpd.trial.master
class TrialManagerCommands
method doTOP
perms *
help Lists all users in trial period.
help.specific Lists all users in trial period.
help.specific ${command} <num>
input all
output source
}

traffic {
plugin org.drftpd.master.commands.transferstatistics
class MoreStats
method doSITE_TRAFFIC
perms *
help Summary of the daemon upload/download stats.
help.specific Summary of the daemon upload/download stats.
help.specific ${command}
input all
output source
}

unban {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_UNBAN
perms =ban =siteop
help Removes a ban for the specified user.
help.specific Removes a ban for the specified user.
help.specific ${command} <user>
input all
output source
}

unbanall {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_UNBANALL
perms =ban =siteop
help Removes ban from all users.
help.specific Removes ban from all users.
help.specific ${command}
input all
output source
}

unnuke {
plugin org.drftpd.master.commands.nuke
class Nuke
method doSITE_UNNUKE
perms =nuke =siteop
search true
help Unnuke a directory.
help.specific Unnuke a directory.
help.specific ${command} <dir>
input all
output source
}

uploaders {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doUploaders
perms *
help Show who's uploading.
help.specific Show who's uploading.
help.specific ${command}
input all
output source
}

user {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_USER
perms *
help Show details for a user.
help.specific Show details for a user.
help.specific ${command} <user>
input all
output source
}

users {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_USERS
perms =siteop
help List all usernames added to the site.
help.specific List all usernames added to the site.
help.specific ${command}
input all
output source
}

vers {
plugin org.drftpd.master.commands.misc
class Misc
method doSITE_VERS
perms *
help Show DrFTPD version.
help.specific Show DrFTPD version.
help.specific ${command}
input all
output source
}

welcome {
plugin org.drftpd.master.commands.textoutput
class Textoutput
method doTEXT_OUTPUT
perms *
help Displays site welcome message.
help.specific Displays site welcome message.
help.specific ${command}
file welcome.txt
input all
output source
}

who {
plugin org.drftpd.master.commands.usermanagement
class UserManagementHandler
method doSITE_WHO
perms =siteop
help Show who's online.
help.specific Show who's online.
help.specific ${command}
input all
output source
}

wipe {
plugin org.drftpd.master.commands.dir
class Dir
method doSITE_WIPE
perms =wipe =siteop
help Deletes files without removing credits. -r means delete recursively.
help.specific Deletes files without removing credits. -r means delete recursively.
help.specific ${command} [-r] <file/dir>
input all
output source
}

wkdn {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_WKDN
perms *
help Lists the top downloaders this week.
help.specific Lists the top downloaders this week.
help.specific ${command}
input all
output source
}

wkup {
plugin org.drftpd.master.commands.transferstatistics
class TransferStatistics
method doSITE_WKUP
perms *
help Lists the top uploaders this week.
help.specific Lists the top uploaders this week.
help.specific ${command}
input all
output source
}

xdupe {
plugin org.drftpd.master.commands.xdupe
class XDupe
method doSITE_XDUPE
perms *
help The X-DUPE mechanism helps you saving time when uploading files by avoiding "dupes".
help.specific The X-DUPE mechanism helps you saving time when uploading files by avoiding "dupes".
help.specific ${command} <mode>
help.specific Mode 1: Up to a maximum of 80 chars total line length. Filenames longer than 66 chars will be truncated.
help.specific Mode 2: The server sends only one filename per X-DUPE line, and the maximum line length is 80 chars. Filenames are also truncated.
help.specific Mode 3: Only one filename is sent per X-DUPE line, and the filename will not be truncated.
help.specific Mode 4: All files are listed on one long line, up to a maximum of 1024 characters. Files which are too long to fit will be skipped.
input all
output source
}
